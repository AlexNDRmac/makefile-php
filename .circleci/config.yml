## Configuration file for CircleCi continuous integration (testing)
##
## This configuration used for testing Makefile with common Laravel projects
##
## Author:
##    - AlexNDRmac (https://github.com/AlexNDRmac)
##
## Copyright 2019,  AlexNDRmac (https://github.com/AlexNDRmac/makefile-php), GNU GPL v3.0 License

version: 2

aliases:
  # CONSTANTS
  - &composer_key_base composer-v1-
  - &composer_key composer-v1-{{ checksum "composer.lock" }}

  - &node_key_base node-v1-
  - &node_key node-v1-{{ checksum "package-lock.json" }}

  - &metrics_key_base metrics_cache-v1-
  - &metrics_key metrics-cache-v1-{{ arch }}

  # CACHES
  - &restore_composer_cache
    restore_cache:
      keys:
        - *composer_key
        - *composer_key_base

  - &save_composer_cache
    save_cache:
      key: *composer_key
      paths:
        - ./vendor

  - &restore_node_cache
    restore_cache:
      keys:
        - *node_key
        - *node_key_base

  - &save_node_cache
    save_cache:
      key: *node_key
      paths:
        - ./node_modules

  - &restore_metrics_cache
    restore_cache:
      keys:
        - *metrics_key
        - *metrics_key_base

  - &save_metrics_cache
    save_cache:
      key: *metrics_key
      paths:
        - ./storage/logs/metrics

  # INSTALLS
  - &composer_install
    run:
      name: Validate Composer | Install Composer
      command: |
        composer validate
        composer config --global github-oauth.github.com $GITHUB_ACCESS_TOKEN
        composer install --no-interaction --no-ansi --prefer-dist --no-suggest

  - &artisan_setup
    run:
      when: always
      name: Artisan | Generate Key
      command: |
        cp ./.env.circleci ./.env
        php artisan config:clear
        php artisan key:generate

  - &node_setup
    run:
      name: NPM | Install
      command: npm install


  # PROCESSES
  - &prepare_environment
    run:
      name: Install PHP extensions | PDO
      command: sudo docker-php-ext-install pdo_mysql

  - &prepare_db
    run:
      name: Prepare Database
      command: |
        dockerize -wait tcp://127.0.0.1:3306 -timeout 60s
        php artisan migrate --no-interaction -vvv

  - &run_webserver
    run:
      when: always
      name: Run Laravel Server
      command: php artisan serve
      background: true

  - &wait_for_http_server
    run:
      when: always
      name: Wait for HTTP Server | Update Application Url
      command: |
        dockerize -wait tcp://127.0.0.1:8000 -timeout 60s
        netstat -plnt
        sed -i "s~APP_URL=.*~APP_URL=http://127.0.0.1:8000~" .env

# This environment is set to every job (and the initial build).
build_machine_environment: &build_machine_environment
  docker:
    - image: circleci/php:7.1-node-browsers
    - image: circleci/mysql:5.7
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: yes
        MYSQL_DATABASE: circle_test

# WORKFLOW
workflows:
  version: 2
  # Run this Workflow only for Pull Requests and Commits to Development branches
  Code Review:
    jobs:
      - run_makefile

# JOBS
jobs:
  # Run Makefile
  run_makefile:
    working_directory: ~/app
    <<: *build_machine_environment
    steps:
      - checkout

      - run:
          name: Install all Tools
          command: make install

      - run:
          name: Install Tools configuration
          command: make configure

      - run:
          name: Check Tools
          command: make check-tools
