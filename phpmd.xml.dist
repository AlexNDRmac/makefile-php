<?xml version="1.0" encoding="UTF-8" ?>
<ruleset
  name="Makefile for Laravel projects Mess Detector Template"
  xmlns="http://pmd.sf.net/ruleset/1.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
  xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd"
>
  <!-- Code Size -->
  <rule ref="rulesets/codesize.xml/CyclomaticComplexity">
    <properties>
      <property name="reportLevel"
                description="The Cyclomatic Complexity reporting threshold"
                value="5"/>
      <property name="showClassesComplexity"
                description="Indicate if class average violation should be added to the report"
                value="true"/>
      <property name="showMethodsComplexity"
                description="Indicate if class average violation should be added to the report"
                value="true"/>
    </properties>
  </rule>
  <rule ref="rulesets/codesize.xml/NPathComplexity"/>
  <rule ref="rulesets/codesize.xml/ExcessiveMethodLength"/>
  <rule ref="rulesets/codesize.xml/ExcessiveClassLength"/>
  <rule ref="rulesets/codesize.xml/ExcessiveClassComplexity">
    <description>
      <![CDATA[
The Weighted Method Count (WMC) of a class is a good indicator of how much time
and effort is required to modify and maintain this class. The WMC metric is defined
as the sum of complexities of all methods declared in a class. A large number of
methods also means that this class has a greater potential impact on derived classes.
            ]]>
    </description>
    <properties>
      <property name="maximum" description="The maximum WMC tolerable for a class." value="30"/>
    </properties>
  </rule>
  <rule ref="rulesets/codesize.xml/ExcessiveParameterList">
    <description>
      Long parameter lists can indicate that a new object should be created to
      wrap the numerous parameters.  Basically, try to group the parameters together.
    </description>
    <properties>
      <property name="minimum" description="The parameter count reporting threshold" value="5"/>
    </properties>
  </rule>
  <rule ref="rulesets/codesize.xml/ExcessivePublicCount"/>
  <rule ref="rulesets/codesize.xml/TooManyFields"/>

  <!--Clean Code rules-->
  <rule ref="rulesets/cleancode.xml/BooleanArgumentFlag"/>
  <rule ref="rulesets/cleancode.xml/ElseExpression"/>
  <rule ref="rulesets/cleancode.xml/StaticAccess">
    <priority>1</priority>
    <properties>
      <property name="exceptions">
        <value>
          \Illuminate\Support\Facades\Schema,
          \Illuminate\Support\Facades\Facade,
          \Illuminate\Support\Facades\Log,
          \Illuminate\Console\Application,
          \Illuminate\Database\Eloquent\Model,
          \Illuminate\Database\Eloquent\Factory,
          \Illuminate\Http\Resources\Json\Resource,
          \Illuminate\Support\Facades\Artisan,
          \Illuminate\Support\Facades\Broadcast,
          \Illuminate\Support\Facades\Route,
          \Illuminate\Support\Str,
          \Illuminate\Support\Arr,
          \PHPUnit\Framework\Assert,
          \Mockery,
          \Log,
          DB,
          \Guzzle,
          \Response,
          \Carbon\Carbon
        </value>
      </property>
    </properties>
  </rule>

  <!--Naming Rules-->
  <rule ref="rulesets/naming.xml/ConstructorWithNameAsEnclosingClass" />
  <rule ref="rulesets/naming.xml/ConstantNamingConventions" />
  <rule ref="rulesets/naming.xml/BooleanGetMethodName" />
  <rule ref="rulesets/naming.xml/ShortVariable">
    <description>
      Detects when a field, local, or parameter has a very short name.
    </description>
    <priority>1</priority>
    <properties>
      <property name="minimum"
                description="Minimum length for a variable, property or parameter name"
                value="2"/>
    </properties>
  </rule>
  <rule ref="rulesets/naming.xml/ShortMethodName">
    <properties>
      <property name="minimum"
                description="Minimum length for a method or function name"
                value="3"/>
      <property name="exceptions"
                description="Comma-separated list of exceptions"
                value="on,at,up"/>
    </properties>
  </rule>
  <rule ref="rulesets/naming.xml/LongVariable">
    <properties>
      <property name="maximum" value="35"/>
    </properties>
  </rule>

  <!--Controversial-->
  <rule ref="rulesets/controversial.xml">
    <exclude name="CamelCaseMethodName" />
  </rule>

  <rule ref="rulesets/controversial.xml/Superglobals" />
  <rule ref="rulesets/controversial.xml/CamelCaseClassName" />
  <rule ref="rulesets/controversial.xml/CamelCasePropertyName">
    <priority>1</priority>
    <properties>
      <property name="allow-underscore"
                description="Allow an optional, single underscore at the beginning."
                value="true" />
      <property name="allow-underscore-test"
                description="Is it allowed to have underscores in test method names."
                value="true" />
    </properties>
  </rule>
  <rule ref="rulesets/controversial.xml/CamelCaseMethodName">
    <priority>1</priority>
    <properties>
      <property name="allow-underscore-test"
                description="Is it allowed to have underscores in test method names."
                value="true"/>
    </properties>
  </rule>
  <rule ref="rulesets/controversial.xml/CamelCaseParameterName" />
  <rule ref="rulesets/controversial.xml/CamelCaseVariableName" />

  <!--Design-->
  <rule ref="rulesets/design.xml/ExitExpression"/>
  <rule ref="rulesets/design.xml/EvalExpression"/>
  <rule ref="rulesets/design.xml/GotoStatement"/>
  <rule ref="rulesets/design.xml/NumberOfChildren">
    <description>
      <![CDATA[
A class with an excessive number of children is an indicator for an unbalanced
class hierarchy. You should consider to refactor this class hierarchy.
            ]]>
    </description>
    <priority>1</priority>
    <properties>
      <property name="minimum" value="100" description="Maximum number of acceptable child classes." />
    </properties>
  </rule>
  <rule ref="rulesets/design.xml/DepthOfInheritance">
    <description>
      <![CDATA[
      A class with many parents is an indicator for an unbalanced and wrong class hierarchy.
      You should consider to refactor this class hierarchy.
      ]]>
    </description>
    <priority>2</priority>
    <properties>
      <property name="minimum" value="10" description="Maximum number of acceptable parent classes." />
    </properties>
  </rule>
  <rule ref="rulesets/design.xml/CouplingBetweenObjects"/>
  <rule ref="rulesets/design.xml/DevelopmentCodeFragment"/>

  <!--Unused Code-->
  <rule ref="rulesets/unusedcode.xml"/>
</ruleset>
